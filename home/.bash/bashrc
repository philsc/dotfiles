# Check for an interactive session
[ -z "$PS1" ] && return

loadpaths() {
  local new_path
  if [[ -r "$1" ]]; then
    while read d; do
      new_path="$(eval "echo $d")"
      if [[ -n "$d" ]]; then
        if ! [[ "$PATH" == "$new_path" || "$PATH" =~ ^${new_path}:.* \
          || "$PATH" =~ .*:${new_path}:.* || "$PATH" =~ :${new_path}\$ ]]; then
          PATH="${new_path}${PATH:+:$PATH}"
        fi
      fi
    done <"$1"
  fi
}
loadpaths ~/.bash/paths
loadpaths ~/.bash/paths.local

# Colors
TXTRED='\e[0;31m'     # Red
TXTGRN='\e[0;32m'     # Green
TXTBLU='\e[0;34m'     # Blue
TXTRST='\e[0m'        # Text Reset

shopt -s histappend   # append to the history file, don't overwrite it
shopt -s checkwinsize # adjust terminal width dynamically
shopt -s globstar  # enable recursive patterns like **/*.txt

# set variable identifying the chroot you work in (used in the prompt below)
#if [ -z "$chroot_name" ]; then
#  if [ -r /etc/chroot_name ]; then
#    chroot_name=$(cat /etc/chroot_name)
#  elif [ -r /etc/debian_chroot ]; then
#    chroot_name=$(cat /etc/debian_chroot)
#  fi
#fi

sourcefile() { [[ -s "$1" ]] && . "$1"; }
sourcefile /etc/bash_completion                       # Ubuntu version
sourcefile /opt/local/etc/bash_completion             # Macports version
sourcefile /usr/share/bash-completion/bash_completion # Fedora version
sourcefile /usr/lib/git-core/git-sh-prompt            # Ubuntu version
sourcefile /opt/local/share/git/git-prompt.sh         # Macports version
sourcefile "$HOME/.cargo/env"

export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1

__timer_start() {
  timer=${timer:-$SECONDS}
}

__timer_stop() {
  timer_show=$((SECONDS - timer))
  unset timer
}

__setps1() {
  local s=""
  local d=""
  local chroot=""
  local g=""

  # Store history to prevent any loss.
  history -a

  # Stop the timer so that we know how long the last command took to execute
  __timer_stop

  if g="$(git rev-parse --show-toplevel 2>/dev/null)"; then
    if [[ "$(git config prompt.fancy)" == "true" ]]; then
      s=" $(__git_ps1 "($TXTRED%s$TXTRST)")"
    else
      s=" ($TXTRED$(git rev-parse --abbrev-ref HEAD 2>/dev/null)$TXTRST)"
    fi
    d="${PWD#$(dirname ${g:--})/}"
  elif g="$(svn info 2>/dev/null)"; then
    # Possibly overcomplicated parsing of svn branch names
    url="$(sed -ne 's#^URL: ##p' <<<"$g")"
    root="$(sed -ne 's#^Repository Root: ##p' <<<"$g")"
    s="$(sed -e 's#^'"$root"'##g' <<<"$url" | egrep -o \
      '(tags|branches)/[^/]+|trunk' | egrep -o '[^/]+$' | awk '{print $1}')"
    s=" ($TXTRED$s$TXTRST)"
    d='\w'
  else
    d='\w'
  fi

  if [[ -r /etc/debian_chroot ]]; then
    chroot="$(cat /etc/debian_chroot)/"
  fi

  PS1="${TXTBLU}\h/$chroot\u${TXTRST} [${TXTGRN}$d${TXTRST}]$s $(date +'%H:%M:%S') r\$?,j\j,t$timer_show\n\$ "
}

# Set the command prompt.
trap __timer_start DEBUG
PROMPT_COMMAND='__setps1'

# Better ls colors
eval $(dircolors -b)

# Alias definitions and exports.
loadrcdir() {
  local rcdir="$1"
  shopt -s nullglob
  mkdir -p "$rcdir"
  for f in "$rcdir"/*; do . $f; done 2>/dev/null
  shopt -u nullglob
}
loadrcdir ~/.bash/aliases.d
loadrcdir ~/.bash/exports.d
loadrcdir ~/.bash/completion.d

# Prevent CTRL-s and CTRL-q from controlling the terminal flow.
stty stop undef
stty start undef

# Don't expand . and .. when using globbing. It very rarely is what I want.
GLOBIGNORE=".:.."
shopt -u dotglob

# If the keychain program is installed (ssh- and gpg-agent frontend), use it.
[[ -n "$(type -P keychain)" ]] && eval "$(keychain --eval --quiet)"

unset SSH_ASKPASS
true
