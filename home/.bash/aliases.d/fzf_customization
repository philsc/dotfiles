#!/bin/bash

if type -p fd &>/dev/null; then
  export FZF_CTRL_T_COMMAND='command fd --hidden --exclude ".git" .'
  export FZF_ALT_C_COMMAND='command fd --type d --hidden --exclude ".git" .'
else
  # Exclude the bazel-* symlinks since they're full of files we don't really care
  # about.
  export FZF_CTRL_T_COMMAND="command find -L . -mindepth 1 \
    \\( -path '*/\\.*' -o -fstype 'sysfs' -o -fstype 'devfs' \
      -o -fstype 'devtmpfs' -o -fstype 'proc' \\) -prune \
      -o -name 'bazel-*' -prune \
      -o -type f -print \
      -o -type d -print \
      -o -type l -print 2> /dev/null | cut -b3-"

  # Exclude the bazel-* symlinks since they're full of folders we don't really
  # care about.
  export FZF_ALT_C_COMMAND="command find -L . -mindepth 1 \
    \\( -path '*/\\.*' -o -fstype 'sysfs' -o -fstype 'devfs' \
      -o -fstype 'devtmpfs' -o -fstype 'proc' \\) -prune \
      -o -name 'bazel-*' -prune \
      -o -type d -print 2> /dev/null | cut -b3-"
fi

__fzf_select_bazel_target__() {
  local cmd="buildozer 'print label' //...:*"
  eval "$cmd" | FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} --reverse $FZF_DEFAULT_OPTS $FZF_CTRL_T_OPTS" fzf -m "$@" | while read -r item; do
    printf '%q ' "$item"
  done
  echo
}

fzf-bazel-target-widget() {
  local selected="$(__fzf_select_bazel_target__)"
  READLINE_LINE="${READLINE_LINE:0:$READLINE_POINT}$selected${READLINE_LINE:$READLINE_POINT}"
  READLINE_POINT=$(( READLINE_POINT + ${#selected} ))
}

# Bind CTRL-q to bring up a list of bazel targets.
bind -x '"\C-q": "fzf-bazel-target-widget"'
